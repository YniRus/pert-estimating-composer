worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Импортируемые переменные: $client_subspace, $client_namespace
    include utils/client_domain.conf;

    # Импортируемые переменные: $ssl_cert, $ssl_key
    include utils/ssl_certificate.conf;

    # Редирект с HTTP на HTTPS для всех доменов
    server {
        listen 80;
        server_name pert-online.ru *.pert-online.ru;

        return 301 https://$host$request_uri;
    }

    # Сервер для основного домена - welcome
    server {
        listen 443 ssl;
        server_name pert-online.ru;

        ssl_certificate $ssl_cert;
        ssl_certificate_key $ssl_key;

        # Перенаправление на welcome образ Docker
        # location / {
        #     proxy_pass http://welcome:80;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # }

        location / {
            root /etc/nginx;
            index welcome.html;
        }
    }

    # Сервер для всех поддоменов - приложений
    server {
        listen 443 ssl;
        server_name *.pert-online.ru;

        ssl_certificate $ssl_cert;
        ssl_certificate_key $ssl_key;

        # Добавляем заголовок для запрета индексации всех поддоменов
        add_header X-Robots-Tag "noindex, nofollow" always;

        location / {
            proxy_pass http://client:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-APP-Namespace $client_namespace;
            proxy_set_header X-APP-Subspace $client_subspace;
        }

        location /api {
            rewrite ^/api/?(.*)$ /$1 break;
            proxy_pass http://server:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-APP-Namespace $client_namespace;
            proxy_set_header X-APP-Subspace $client_subspace;
        }

        location /io {
            proxy_pass http://server:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-APP-Namespace $client_namespace;
            proxy_set_header X-APP-Subspace $client_subspace;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
    }
}
